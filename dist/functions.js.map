{"version":3,"file":"functions.js","mappings":"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","sources":["webpack://excel-custom-functions/webpack/bootstrap","webpack://excel-custom-functions/webpack/runtime/define property getters","webpack://excel-custom-functions/webpack/runtime/hasOwnProperty shorthand","webpack://excel-custom-functions/webpack/runtime/make namespace object","webpack://excel-custom-functions/./src/functions/functions.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* global clearInterval, console, CustomFunctions, setInterval */\n\n/**\n * Adds two numbers.\n * @customfunction\n * @param first First number\n * @param second Second number\n * @returns The sum of the two numbers.\n */\nexport function add(first: number, second: number): number {\n  return first + second;\n}\n\n// /**\n//  * convert data to Json\n//  * @customfunction\n//  * @param headers Json element name\n//  * @param datas Json element value\n//  * @returns {string} The Json of the data.\n//  */\n// export function tojson(headers: string, datas: string): string {\n//   const objects = getJsonArrayFromData(headers, datas);\n//   const json = JSON.stringify(objects);\n//   if (json.length < 50000) {\n//     return json;\n//   }\n//   return json;\n// }\n\n/**\n * convert data to Json\n * @customfunction\n * @param datas element value\n * @returns {string} The Json of the data.\n */\nexport function tojson(datas: string): string {\n  const rows = datas.trim().split('\\n');\n  const array = rows.map(row => row.split(','));\n  return dataArrayToJson(array);\n}\n\nfunction dataArrayToJson(data: any[][]): string {\n  const headers = data[0];\n  const rows = data.slice(1);\n  \n  const json = rows.map(row => {\n    const obj: { [key: string]: any } = {};\n    headers.forEach((header, index) => {\n      let value = row[index];\n      if(value === \"NoData_Int\" || value === \"NoData_Enum\") {\n        value = 0;\n      } else if (value === \"NoData_Bool\") {\n        value = false;\n      } else if (value === \"NoData_Json\") {\n        value = {};\n      } else if (value === \"NoData_Array\") {\n        value = [];\n      } else if (value === \"NoData_Text\") {\n        value = \"\";\n      } else if (!isNaN(value)) { // Convert numeric strings to numbers\n        value = Number(value);\n      }\n      obj[header] = value;\n    });\n    return obj;\n  });\n\n  return JSON.stringify(json);\n}\n\n/**\n * Displays the current time once a second.\n * @customfunction\n * @param invocation Custom function handler\n */\nexport function clock(invocation: CustomFunctions.StreamingInvocation<string>): void {\n  const timer = setInterval(() => {\n    const time = currentTime();\n    invocation.setResult(time);\n  }, 1000);\n\n  invocation.onCanceled = () => {\n    clearInterval(timer);\n  };\n}\n\n/**\n * Returns the current time.\n * @returns String with the current time formatted for the current locale.\n */\nexport function currentTime(): string {\n  return new Date().toLocaleTimeString();\n}\n\n/**\n * Increments a value once a second.\n * @customfunction\n * @param incrementBy Amount to increment\n * @param invocation Custom function handler\n */\nexport function increment(incrementBy: number, invocation: CustomFunctions.StreamingInvocation<number>): void {\n  let result = 0;\n  const timer = setInterval(() => {\n    result += incrementBy;\n    invocation.setResult(result);\n  }, 1000);\n\n  invocation.onCanceled = () => {\n    clearInterval(timer);\n  };\n}\n\n/**\n * Writes a message to console.log().\n * @customfunction LOG\n * @param message String to write.\n * @returns String to write.\n */\nexport function logMessage(message: string): string {\n  console.log(message);\n\n  return message;\n}\n\nCustomFunctions.associate(\"ADD\", add);\nCustomFunctions.associate(\"TOJSON\", tojson);\nCustomFunctions.associate(\"CLOCK\", clock);\nCustomFunctions.associate(\"INCREMENT\", increment);\nCustomFunctions.associate(\"LOG\", logMessage);"],"names":["add","first","second","tojson","datas","rows","trim","split","array","map","row","dataArrayToJson","data","headers","slice","json","obj","forEach","header","index","value","isNaN","Number","JSON","stringify","clock","invocation","timer","setInterval","time","currentTime","setResult","onCanceled","clearInterval","Date","toLocaleTimeString","increment","incrementBy","result","logMessage","message","console","log","CustomFunctions","associate"],"sourceRoot":""}